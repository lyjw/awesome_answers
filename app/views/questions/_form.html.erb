<%#
- This file '_form.html.erb' is considered to a be partial, which means it can be included in other templates.
- Partials begin with an '_', i.e. '_form.html_erb'.
- Partials have access to the same instance variables available in the templates (e.g. @question) %>

<!-- <%= @question.errors.full_messages.join(", ").html_safe %> -->

<%# form_for is a Rails helper method that accepts an ActiveRecord object as the first argument.
- If @question is not persisted in the database (does not have an id, only exists in memory), form_for makes the 'action' of the form go to 'questions_path' (Rails convention) and it will make the 'method' of 'form' be POST. (Thus, questions_path must be defined or an error will be thrown)%>

<%# If you give the 'form_for' helper an ActiveRecord object that is persisted, then the generated form will have an action that submits to 'question_path(@question)' where @question is the ActiveRecord object that you passed to the form. The action will be PATCH (using the _method workaround - Rack::Override)%>
<%= simple_form_for @question do |f| %>

  <%# Simple form adds a div, label and input %>

  <!-- <label class="string required label_field_class control-label" for="question_title"><abbr title="required">*</abbr> Title</label> -->
  <%= f.input :title, input_html: { class: "input_field_class" }, label_html: { class: "label_field_class"} %>
  <%= f.input :body %>
  <%= f.association :category %>
  <!-- <%# f.association :tags, as: :check_boxes, input_html: { class: } %> -->
  <%= f.association :tags, input_html: { class: 'chosen-select' } %>
  <%= f.input :image %>

  <%= f.submit class: "btn btn-primary" %>

<% end %>
