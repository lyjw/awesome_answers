<h1><%= @question.title %></h1>

<p>
  <%= @question.body %>
</p>

<p>Created by: <%= @question.user_full_name.titleize %></p>

<p>Tags: <%= @question.tags.map { |t| t.name }.join(", ") %></p>

<p>View Count: <%= @question.view_count %></p>

<%# can? is a helper method from the CanCanCan gem to help us enforce authorization rule sin the views and controllers. The rule for :crud includes rules for :edit and :destroy  %>
<%# if @question.user == current_user %>
<% if can? :update, @question %>
  <%= link_to "Edit Question", edit_question_path(@question) %><br/>
<% end %>

<% if can? :destroy, @question %>
  <%# Rails mimics a Javascript delete request  %>
  <%# <a rel="nofollow" data-method="delete" href="/questions/10">Delete Question</a> %>
  <%= link_to "Delete Question", question_path(@question),
                                 method: :delete,
                                 data: {confirm: "Are you sure?"} %>
<% end %>

<div>

  <div id="question-like">
    <%= render "/likes/like" %>
  </div>

  |

  <% user_vote = @question.vote_for(current_user) %>
  <% if user_vote && user_vote.is_up? %>
    <%# if user upvoted  %>
    <%= link_to "Undo Upvote", question_vote_path(@question, user_vote), method: :delete  %>
    <%= link_to "Downvote", question_vote_path(@question, user_vote, { vote: {is_up: false}}), method: :patch  %>
  <% elsif user_vote %>
    <%# if user downvoted  %>
    <%= link_to "Upvote", question_vote_path(@question, user_vote, { vote: {is_up: true}}), method: :patch  %>
    <%= link_to "Undo Downvote", question_vote_path(@question, user_vote), method: :delete  %>
  <% else %>
    <%# if user has not voted  %>
    <%= link_to "Upvote", question_votes_path(@question, { vote: {is_up: true}}), method: :post  %>
    <%= link_to "Downvote", question_votes_path(@question, { vote: {is_up: false}}), method: :post  %>
  <% end %>

  (<%= @question.vote_value %>)

</div>

<hr>

<div id="answer-form">
  <%= render "/answers/form", answer: @answer %>
</div>

<hr>

<% if @question.answers %>

  <h3>[ Answers ]</h3>

  <div id="answers">
    <% @question.answers.each do |ans| %>
      <%# Partials have access to instance variables but not local variables, so we have to pass 'ans' into the partial %>
      <%= render "/answers/answer", answer: ans %>
    <% end %>
  </div>

<% end %>

<!-- Modal -->
<div class="modal fade" id="edit-answer" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">Edit Answer</h4>
      </div>
      <div class="modal-body">
        ...
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>
